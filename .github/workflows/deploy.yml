name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
     
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Check AWS secrets presence
      run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then echo "❌ Missing AWS_ACCESS_KEY_ID"; exit 1; fi
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then echo "❌ Missing AWS_SECRET_ACCESS_KEY"; exit 1; fi
          echo "✅ Secrets are available"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
     
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${HOST} << EOF
          # Stop old container if it exists
          docker stop fastapi-app || true
          docker rm fastapi-app || true

          # Pull latest image from Docker Hub
          docker pull $DOCKER_USERNAME/fastapi-app:latest

          # Run the container
          docker run -d -p 8000:8000 --name fastapi-app $DOCKER_USERNAME/fastapi-app:latest

        rm -f private_key.pem
     
    - name: Verify deployment
      run: |
        sleep 10
        curl -f http://${{ secrets.EC2_HOST }}:8000/health || exit 1
     
    - name: Notify deployment
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"

        fi


