name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
     
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
     
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
     
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
     
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
     
    - name: Run linting
      run: |
        pip install flake8
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
     
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term
     
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
     
  build:
    runs-on: ubuntu-latest
    needs: test
     
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
     
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
     
    - name: Build Docker image
      run: |
        docker build -t fastapi-app:${{ github.sha }} .
      working-directory: ${{ github.workspace }}
     
    - name: Test Docker image
      run: |
        docker run -d -p 8000:8000 --name test-container fastapi-app:${{ github.sha }}
        sleep 5
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container
        docker rm test-container
     
    - name: Log in to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
     
    - name: Push to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker tag fastapi-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
        docker tag fastapi-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:${{ github.sha }}